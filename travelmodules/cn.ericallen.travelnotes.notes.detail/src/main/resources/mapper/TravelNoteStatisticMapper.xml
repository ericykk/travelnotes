<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ericallen.travelnotes.dao.notes.TravelNoteStatisticMapper" >
  <resultMap id="BaseResultMap" type="cn.ericallen.travelnotes.notes.model.TravelNoteStatistic" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pk_travel_note" property="pkTravelNote" jdbcType="BIGINT" />
    <result column="browse_number" property="browseNumber" jdbcType="INTEGER" />
    <result column="comment_number" property="commentNumber" jdbcType="INTEGER" />
    <result column="praise_number" property="praiseNumber" jdbcType="INTEGER" />
    <result column="share_number" property="shareNumber" jdbcType="INTEGER" />
    <result column="collection_number" property="collectionNumber" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pk_travel_note, browse_number, comment_number, praise_number, share_number, collection_number, 
    delete_flag, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_travel_note_statistic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_travel_note_statistic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.ericallen.travelnotes.notes.model.TravelNoteStatistic" >
    insert into t_travel_note_statistic (id, pk_travel_note, browse_number, 
      comment_number, praise_number, share_number, 
      collection_number, delete_flag, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{pkTravelNote,jdbcType=BIGINT}, #{browseNumber,jdbcType=INTEGER}, 
      #{commentNumber,jdbcType=INTEGER}, #{praiseNumber,jdbcType=INTEGER}, #{shareNumber,jdbcType=INTEGER}, 
      #{collectionNumber,jdbcType=INTEGER}, #{deleteFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.ericallen.travelnotes.notes.model.TravelNoteStatistic" >
    insert into t_travel_note_statistic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pkTravelNote != null" >
        pk_travel_note,
      </if>
      <if test="browseNumber != null" >
        browse_number,
      </if>
      <if test="commentNumber != null" >
        comment_number,
      </if>
      <if test="praiseNumber != null" >
        praise_number,
      </if>
      <if test="shareNumber != null" >
        share_number,
      </if>
      <if test="collectionNumber != null" >
        collection_number,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pkTravelNote != null" >
        #{pkTravelNote,jdbcType=BIGINT},
      </if>
      <if test="browseNumber != null" >
        #{browseNumber,jdbcType=INTEGER},
      </if>
      <if test="commentNumber != null" >
        #{commentNumber,jdbcType=INTEGER},
      </if>
      <if test="praiseNumber != null" >
        #{praiseNumber,jdbcType=INTEGER},
      </if>
      <if test="shareNumber != null" >
        #{shareNumber,jdbcType=INTEGER},
      </if>
      <if test="collectionNumber != null" >
        #{collectionNumber,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ericallen.travelnotes.notes.model.TravelNoteStatistic" >
    update t_travel_note_statistic
    <set >
      <if test="pkTravelNote != null" >
        pk_travel_note = #{pkTravelNote,jdbcType=BIGINT},
      </if>
      <if test="browseNumber != null" >
        browse_number = #{browseNumber,jdbcType=INTEGER},
      </if>
      <if test="commentNumber != null" >
        comment_number = #{commentNumber,jdbcType=INTEGER},
      </if>
      <if test="praiseNumber != null" >
        praise_number = #{praiseNumber,jdbcType=INTEGER},
      </if>
      <if test="shareNumber != null" >
        share_number = #{shareNumber,jdbcType=INTEGER},
      </if>
      <if test="collectionNumber != null" >
        collection_number = #{collectionNumber,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ericallen.travelnotes.notes.model.TravelNoteStatistic" >
    update t_travel_note_statistic
    set pk_travel_note = #{pkTravelNote,jdbcType=BIGINT},
      browse_number = #{browseNumber,jdbcType=INTEGER},
      comment_number = #{commentNumber,jdbcType=INTEGER},
      praise_number = #{praiseNumber,jdbcType=INTEGER},
      share_number = #{shareNumber,jdbcType=INTEGER},
      collection_number = #{collectionNumber,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>