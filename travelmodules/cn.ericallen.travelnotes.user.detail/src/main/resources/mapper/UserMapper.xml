<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--如果没有具体的接口实现类  namespace需要与接口的位置相同 -->
<mapper namespace="cn.ericallen.travelnotes.dao.user.IUserDao">
	<resultMap type="cn.ericallen.travelnotes.user.model.User" id="BaseResultMap">
		<result column="OPENID" property="openId" jdbcType="VARCHAR" />
		<result column="NICKNAME" property="nickName" jdbcType="VARCHAR" />
		<result column="SEX" property="sex" jdbcType="VARCHAR" />
		<result column="CITY" property="city" jdbcType="VARCHAR" />
		<result column="PROVINCE" property="province" jdbcType="VARCHAR" />
		<result column="COUNTRY" property="country" jdbcType="VARCHAR" />
		<result column="LOGIN_TIME" property="loginTime" jdbcType="DATE" />
		<result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="DELETE_FLAG" property="deleteFlag" jdbcType="TINYINT" />
		<result column="LOGIN_ACCOUNT_TYPE" property="loginAccountType" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="BaseResult">
		OPENID,
		NICKNAME,
		SEX,
		CITY,
		PROVINCE,
		COUNTRY,
		LOGIN_TIME,
		CREATE_TIME,
		UPDATE_TIME,
		DELETE_FLAG,
		LOGIN_ACCOUNT_TYPE
	</sql>
	<!-- 根据openId查询用户登录信息 -->
	<select id="getUserByOpenId" parameterType="String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="BaseResult"></include>
		FROM t_travel_note_user
		<where>
			openid = #{openId,jdbcType=VARCHAR}
			and delete_flag = 0
		</where>
	</select>
	<!--  保存登录用户信息-->
	<insert id="saveUserData" parameterType="cn.ericallen.travelnotes.user.model.User">
		insert into t_travel_note_user
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="openId != null">
					OPENID,
				</if>
				<if test="nickName != null">
					NICKNAME,
				</if>
				<if test="sex != null">
					SEX,
				</if>
				<if test="city != null">
					CITY,
				</if>
				<if test="province != null">
					PROVINCE,
				</if>
				<if test="country != null">
					COUNTRY,
				</if>
				<if test="loginTime != null">
					LOGIN_TIME,
				</if>
				<if test="createTime != null">
					CREATE_TIME,
				</if>
				<if test="loginAccountType != null">
					LOGIN_ACCOUNT_TYPE,
				</if>
			</trim>

			<trim prefix="values (" suffix=")" suffixOverrides=",">
				<if test="openId != null">
					#{openId,jdbcType=VARCHAR},
				</if>
				<if test="nickName != null">
					#{nickName,jdbcType=VARCHAR},
				</if>
				<if test="sex != null">
					#{sex,jdbcType=VARCHAR},
				</if>
				<if test="city != null">
					#{city,jdbcType=VARCHAR},
				</if>
				<if test="province != null">
					#{province,jdbcType=VARCHAR},
				</if>
				<if test="country != null">
					#{country,jdbcType=VARCHAR},
				</if>
				<if test="loginTime != null">
					#{loginTime,jdbcType=DATE},
				</if>
				<if test="createTime != null">
					#{createTime,jdbcType=DATE},
				</if>
				<if test="loginAccountType != null">
					#{loginAccountType,jdbcType=VARCHAR},
				</if>
			</trim>
	</insert>
	<!-- 更新登录用户信息 -->
	<update id="updateUserData" parameterType="cn.ericallen.travelnotes.user.model.User">
		update t_travel_note_user
			<set>
				<if test="nickName != null">
					NICKNAME = #{nickName,jdbcType=VARCHAR},
				</if>
				<if test="sex != null">
					SEX = #{sex,jdbcType=VARCHAR},
				</if>
				<if test="city != null">
					CITY = #{city,jdbcType=VARCHAR},
				</if>
				<if test="province != null">
					PROVINCE = #{province,jdbcType=VARCHAR},
				</if>
				<if test="country != null">
					COUNTRY = #{country,jdbcType=VARCHAR},
				</if>
				<if test="loginTime != null">
					LOGIN_TIME = #{loginTime,jdbcType=DATE},
				</if>
				<if test="deleteFlag != null">
					DELETE_FLAG = #{deleteFlag,jdbcType=TINYINT},
				</if>
			</set>
			where OPENID = #{openId,jdbcType=VARCHAR}
	</update>

</mapper>